# Generated by Django 4.2.24 on 2025-09-28 19:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект в системе', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания объекта', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления объекта', verbose_name='Дата обновления')),
                ('text', models.TextField(help_text='Содержимое запроса от пользователя', verbose_name='Текст запроса')),
                ('author_name', models.CharField(help_text='Имя автора оригинального сообщения', max_length=200, verbose_name='Имя автора')),
                ('author_telegram_id', models.BigIntegerField(blank=True, help_text='ID автора в Telegram (если доступен)', null=True, verbose_name='Telegram ID автора')),
                ('sender_telegram_id', models.BigIntegerField(help_text='ID пользователя, который переслал сообщение в бот', verbose_name='Telegram ID отправителя')),
                ('telegram_message_id', models.BigIntegerField(help_text='Уникальный ID сообщения в Telegram', verbose_name='ID сообщения в Telegram')),
                ('telegram_chat_id', models.BigIntegerField(help_text='ID чата, из которого пришло сообщение', verbose_name='ID чата в Telegram')),
                ('media_group_id', models.CharField(blank=True, help_text='ID группы медиа для групповых сообщений', max_length=100, null=True, verbose_name='ID группы медиа')),
                ('has_images', models.BooleanField(default=False, help_text='Указывает, есть ли в запросе изображения', verbose_name='Содержит изображения')),
                ('has_files', models.BooleanField(default=False, help_text='Указывает, есть ли в запросе файлы', verbose_name='Содержит файлы')),
                ('original_created_at', models.DateTimeField(blank=True, help_text='Дата и время создания оригинального сообщения в Telegram', null=True, verbose_name='Дата создания сообщения')),
                ('status', models.CharField(choices=[('pending', 'Ожидает обработки'), ('in_progress', 'В обработке'), ('completed', 'Выполнен'), ('cancelled', 'Отменен')], default='pending', help_text='Текущий статус обработки запроса', max_length=20, verbose_name='Статус')),
                ('processed_at', models.DateTimeField(blank=True, help_text='Дата и время начала обработки запроса агентом', null=True, verbose_name='Дата обработки')),
                ('response_text', models.TextField(blank=True, help_text='Текст ответа агента на запрос', null=True, verbose_name='Ответ агента')),
                ('agent', models.ForeignKey(blank=True, help_text='Агент, который обрабатывает данный запрос', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_requests', to=settings.AUTH_USER_MODEL, verbose_name='Агент')),
                ('created_by', models.ForeignKey(blank=True, help_text='Пользователь, который создал этот объект', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
            ],
            options={
                'verbose_name': 'Запрос',
                'verbose_name_plural': 'Запросы',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект в системе', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания объекта', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления объекта', verbose_name='Дата обновления')),
                ('image', models.ImageField(help_text='Файл изображения', upload_to='requests/images/%Y/%m/%d/', verbose_name='Изображение')),
                ('telegram_file_id', models.CharField(blank=True, help_text='Уникальный ID файла в Telegram API', max_length=200, null=True, verbose_name='ID файла в Telegram')),
                ('file_size', models.BigIntegerField(blank=True, help_text='Размер файла в байтах', null=True, verbose_name='Размер файла')),
                ('caption', models.TextField(blank=True, help_text='Подпись к изображению', null=True, verbose_name='Подпись')),
                ('created_by', models.ForeignKey(blank=True, help_text='Пользователь, который создал этот объект', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('request', models.ForeignKey(help_text='Запрос, к которому относится изображение', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='telegram_requests.request', verbose_name='Запрос')),
            ],
            options={
                'verbose_name': 'Изображение запроса',
                'verbose_name_plural': 'Изображения запросов',
                'ordering': ['request', 'created_at'],
                'abstract': False,
                'indexes': [models.Index(fields=['request'], name='telegram_re_request_420404_idx'), models.Index(fields=['telegram_file_id'], name='telegram_re_telegra_ef4440_idx'), models.Index(fields=['is_active'], name='telegram_re_is_acti_b60c24_idx'), models.Index(fields=['created_by'], name='telegram_re_created_5e07f4_idx')],
            },
        ),
        migrations.CreateModel(
            name='RequestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект в системе', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания объекта', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления объекта', verbose_name='Дата обновления')),
                ('file', models.FileField(help_text='Загруженный файл', upload_to='requests/files/%Y/%m/%d/', verbose_name='Файл')),
                ('original_filename', models.CharField(help_text='Имя файла, как оно было в Telegram', max_length=255, verbose_name='Оригинальное имя файла')),
                ('file_size', models.BigIntegerField(help_text='Размер файла в байтах', verbose_name='Размер файла')),
                ('mime_type', models.CharField(help_text='MIME тип файла', max_length=100, verbose_name='MIME тип')),
                ('telegram_file_id', models.CharField(blank=True, help_text='Уникальный ID файла в Telegram API', max_length=200, null=True, verbose_name='ID файла в Telegram')),
                ('created_by', models.ForeignKey(blank=True, help_text='Пользователь, который создал этот объект', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('request', models.ForeignKey(help_text='Запрос, к которому относится файл', on_delete=django.db.models.deletion.CASCADE, related_name='files', to='telegram_requests.request', verbose_name='Запрос')),
            ],
            options={
                'verbose_name': 'Файл запроса',
                'verbose_name_plural': 'Файлы запросов',
                'ordering': ['request', 'created_at'],
                'abstract': False,
                'indexes': [models.Index(fields=['request'], name='telegram_re_request_195334_idx'), models.Index(fields=['telegram_file_id'], name='telegram_re_telegra_4986b1_idx'), models.Index(fields=['mime_type'], name='telegram_re_mime_ty_3e5fcd_idx'), models.Index(fields=['is_active'], name='telegram_re_is_acti_34fc32_idx'), models.Index(fields=['created_by'], name='telegram_re_created_4bb335_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['status'], name='telegram_re_status_74d844_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['agent'], name='telegram_re_agent_i_a85dfe_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['sender_telegram_id'], name='telegram_re_sender__27156e_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['author_telegram_id'], name='telegram_re_author__9b67b2_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['telegram_message_id'], name='telegram_re_telegra_0f8193_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['original_created_at'], name='telegram_re_origina_27ff85_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['is_active'], name='telegram_re_is_acti_1c2d61_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['created_by'], name='telegram_re_created_743dae_idx'),
        ),
    ]
