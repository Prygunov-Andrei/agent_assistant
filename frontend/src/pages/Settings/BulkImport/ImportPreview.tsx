/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
import React from 'react';
import type { ImportSession } from '../../../types/bulkImport';
import './BulkImport.css';

interface ImportPreviewProps {
  session: ImportSession;
  onConfirm: () => void;
  onCancel: () => void;
}

const ImportPreview: React.FC<ImportPreviewProps> = ({ session, onConfirm, onCancel }) => {
  const hasErrors = session.invalid_rows > 0;
  const hasDuplicates = session.records_data.preview.some(
    row => row.potential_duplicates.length > 0
  );

  return (
    <div className="import-preview">
      <div className="header">
        <h2>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö</h2>
        <p className="filename">–§–∞–π–ª: {session.original_filename}</p>
      </div>

      <div className="statistics">
        <div className="stat-card">
          <div className="stat-value">{session.total_rows}</div>
          <div className="stat-label">–í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫</div>
        </div>
        <div className="stat-card success">
          <div className="stat-value">{session.valid_rows}</div>
          <div className="stat-label">–í–∞–ª–∏–¥–Ω—ã—Ö</div>
        </div>
        {hasErrors && (
          <div className="stat-card error">
            <div className="stat-value">{session.invalid_rows}</div>
            <div className="stat-label">–° –æ—à–∏–±–∫–∞–º–∏</div>
          </div>
        )}
        {hasDuplicates && (
          <div className="stat-card warning">
            <div className="stat-value">
              {session.records_data.preview.filter(r => r.potential_duplicates.length > 0).length}
            </div>
            <div className="stat-label">–í–æ–∑–º–æ–∂–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤</div>
          </div>
        )}
      </div>

      {hasErrors && (
        <div className="errors-section">
          <h3>‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏</h3>
          <div className="error-list">
            {session.records_data.errors.map((error) => (
              <div key={error.row_number} className="error-item">
                <strong>–°—Ç—Ä–æ–∫–∞ {error.row_number}:</strong>
                <ul>
                  {error.errors.map((err, idx) => (
                    <li key={idx}>{err}</li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
          <p className="error-note">
            –°—Ç—Ä–æ–∫–∏ —Å –æ—à–∏–±–∫–∞–º–∏ –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ. 
            –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–∞–π–ª–µ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –∑–∞–Ω–æ–≤–æ, –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –±–µ–∑ —ç—Ç–∏—Ö —Å—Ç—Ä–æ–∫.
          </p>
        </div>
      )}

      {hasDuplicates && (
        <div className="duplicates-info">
          <h3>üîç –ù–∞–π–¥–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã</h3>
          <p>
            –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∞ {session.records_data.preview.filter(r => r.potential_duplicates.length > 0).length} –ø–µ—Ä—Å–æ–Ω, 
            –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –±–∞–∑–µ. –ù–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ä–µ—à–∏—Ç—å, 
            —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é.
          </p>
        </div>
      )}

      <div className="preview-table-wrapper">
        <h3>–î–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞</h3>
        <table className="preview-table">
          <thead>
            <tr>
              <th>‚Ññ</th>
              <th>–¢–∏–ø</th>
              <th>–§–ò–û</th>
              <th>–ö–æ–Ω—Ç–∞–∫—Ç—ã</th>
              <th>–°—Ç–∞—Ç—É—Å</th>
            </tr>
          </thead>
          <tbody>
            {session.records_data.preview
              .filter(row => row.validation_errors.length === 0)
              .slice(0, 20)
              .map((row) => (
                <tr key={row.row_number}>
                  <td>{row.row_number}</td>
                  <td>{row.data.person_type}</td>
                  <td>
                    {row.data.last_name} {row.data.first_name}
                  </td>
                  <td>
                    <div className="contacts-preview">
                      {row.data.phones.length > 0 && (
                        <div>üìû {row.data.phones.join(', ')}</div>
                      )}
                      {row.data.telegrams.length > 0 && (
                        <div>‚úàÔ∏è {row.data.telegrams.join(', ')}</div>
                      )}
                      {row.data.emails.length > 0 && (
                        <div>üìß {row.data.emails.join(', ')}</div>
                      )}
                    </div>
                  </td>
                  <td>
                    {row.potential_duplicates.length > 0 ? (
                      <span className="badge warning">
                        –í–æ–∑–º–æ–∂–Ω—ã–π –¥—É–±–ª–∏–∫–∞—Ç
                      </span>
                    ) : (
                      <span className="badge success">
                        –ù–æ–≤–∞—è
                      </span>
                    )}
                  </td>
                </tr>
              ))}
          </tbody>
        </table>
        {session.valid_rows > 20 && (
          <p className="table-note">
            –ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 20 –∑–∞–ø–∏—Å–µ–π –∏–∑ {session.valid_rows}
          </p>
        )}
      </div>

      <div className="footer-actions">
        <button 
          className="btn-secondary" 
          onClick={onCancel}
          type="button"
        >
          –û—Ç–º–µ–Ω–∞
        </button>
        <button 
          className="btn-primary btn-large"
          onClick={onConfirm}
          disabled={session.valid_rows === 0}
          type="button"
        >
          {hasDuplicates ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã ‚Üí' : '–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Üí'}
        </button>
      </div>
    </div>
  );
};

export default ImportPreview;

