#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º backend —Ç–µ—Å—Ç—ã
echo "üìä –ó–∞–ø—É—Å–∫ backend —Ç–µ—Å—Ç–æ–≤..."
cd backend
source venv/bin/activate
python -m pytest tests/ -v --tb=short
BACKEND_EXIT_CODE=$?
deactivate
cd ..

if [ $BACKEND_EXIT_CODE -ne 0 ]; then
    echo "‚ùå Backend —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º frontend —Ç–µ—Å—Ç—ã
echo "üé® –ó–∞–ø—É—Å–∫ frontend —Ç–µ—Å—Ç–æ–≤..."
cd frontend
npm test -- --watchAll=false
FRONTEND_EXIT_CODE=$?
cd ..

if [ $FRONTEND_EXIT_CODE -ne 0 ]; then
    echo "‚ùå Frontend —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å"
    exit 1
fi

echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"