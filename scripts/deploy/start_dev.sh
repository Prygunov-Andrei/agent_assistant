#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Agent Assistant –≤ —Ä–µ–∂–∏–º–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# –° HOT RELOAD –¥–ª—è backend –∏ frontend

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/../.." || exit 1

echo "üöÄ –ó–∞–ø—É—Å–∫ Agent Assistant –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (HOT RELOAD)..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
echo "1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi
echo "‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
echo "2Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞..."
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "   –°–æ–∑–¥–∞–π—Ç–µ .env –∏–∑ .env.example –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª—é—á–∏"
    exit 1
fi
echo "‚úÖ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
echo ""

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "3Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker/docker-compose.yml \
  -f docker/docker-compose.dev.yml \
  --env-file .env down 2>/dev/null
echo "‚úÖ –°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—å –¥–ª—è Telegram –±–æ—Ç–∞
echo "4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–∏ –¥–ª—è Telegram –±–æ—Ç–∞..."
if ! docker network inspect agent_assistant_agent_network > /dev/null 2>&1; then
    docker network create agent_assistant_agent_network
    echo "‚úÖ –°–µ—Ç—å agent_assistant_agent_network —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "‚úÖ –°–µ—Ç—å agent_assistant_agent_network —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≤ DEV —Ä–µ–∂–∏–º–µ
echo "5Ô∏è‚É£  –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
docker-compose -f docker/docker-compose.yml \
  -f docker/docker-compose.dev.yml \
  --env-file .env up -d
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
echo ""

# –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "6Ô∏è‚É£  –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (20 —Å–µ–∫)..."
sleep 20
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –≥–æ—Ç–æ–≤—ã"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "7Ô∏è‚É£  –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo ""
docker ps --filter "name=agent_assistant" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞
echo "8Ô∏è‚É£  Telegram –±–æ—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):"
read -p "   –ó–∞–ø—É—Å—Ç–∏—Ç—å Telegram –±–æ—Ç–∞? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "   –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞..."
    docker-compose -f docker/docker-compose.yml \
      -f docker/docker-compose.dev.yml \
      -f docker/docker-compose.bot.dev.yml \
      --env-file .env up -d telegram-bot
    sleep 3
    if docker ps | grep -q "agent_assistant_telegram_bot_dev"; then
        echo "   ‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω"
    else
        echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ (—Å–º. –ª–æ–≥–∏: docker logs agent_assistant_telegram_bot_dev)"
    fi
else
    echo "   ‚è≠  Telegram –±–æ—Ç –ø—Ä–æ–ø—É—â–µ–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∑–∂–µ: ./scripts/bot/bot_dev_toggle.sh)"
fi
echo ""

echo "‚úÖ Agent Assistant –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
echo ""
echo "üî• HOT RELOAD –≤–∫–ª—é—á–µ–Ω:"
echo "   Backend:  Django runserver (–∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ .py —Ñ–∞–π–ª–æ–≤)"
echo "   Frontend: Vite HMR (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ .tsx/.ts/.css)"
echo ""
echo "üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ URLs:"
echo "   Frontend:     http://localhost:3000"
echo "   Backend:      http://localhost:8000"
echo "   API Docs:     http://localhost:8000/api/docs/"
echo "   Admin:        http://localhost:8000/admin/"
echo "   Nginx:        http://localhost"
echo ""
echo "üìù –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ - –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!"
echo ""
echo "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
echo "   Backend:    docker-compose -f docker/docker-compose.yml -f docker/docker-compose.dev.yml logs -f backend"
echo "   Frontend:   docker-compose -f docker/docker-compose.yml -f docker/docker-compose.dev.yml logs -f frontend"
echo "   –í—Å–µ –ª–æ–≥–∏:   docker-compose -f docker/docker-compose.yml -f docker/docker-compose.dev.yml logs -f"
echo ""
echo "ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –±–æ—Ç–æ–º:"
echo "   –í–∫–ª/–í—ã–∫–ª:            ./scripts/bot/bot_dev_toggle.sh"
echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ./scripts/bot/bot_check_duplicates.sh"
echo "   –õ–æ–≥–∏:                docker logs -f agent_assistant_telegram_bot_dev"
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "   ./scripts/deploy/stop_all.sh"
echo ""

